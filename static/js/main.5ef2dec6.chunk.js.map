{"version":3,"sources":["components/Container/index.js","components/RGBInput/style.js","components/RGBInput/index.js","utils/functions.js","components/Conversor/style.js","components/Conversor/index.js","store/index.js","store/modules/colors/reducer.js","styles/global.js","App.js","index.js"],"names":["Container","styled","div","RGBForm","RGBInput","useSelector","state","red","green","blue","dispatch","useDispatch","handleChangeColor","e","color","value","target","type","name","min","max","onChange","className","placeholder","getNewRGB","parseFloat","ConversionList","ul","Conversor","colors","rgbNormalized","useMemo","sum","map","v","toFixed","normalizeRGB","newCMYK","newRed","newGreen","newBlue","black","Math","rgb2cmyk","newHSV","console","log","toUse","toAdd","ceil","parseInt","rgb2hsv","grayscale","reduce","total","join","style","marginBottom","store","createStore","action","createGlobalStyle","App","fontWeight","href","ReactDOM","render","document","getElementById"],"mappings":"gbAEA,IASeA,EATGC,IAAOC,IAAV,K,yRCAR,IAAMC,EAAUF,IAAOC,IAAV,KCGL,SAASE,IAAY,IAAD,EAEJC,aAAY,SAAAC,GAAK,OAAIA,KAFjB,mBAEzBC,EAFyB,KAEpBC,EAFoB,KAEbC,EAFa,KAI3BC,EAAWC,cAEjB,SAASC,EAAkBC,EAAGC,GAAQ,IAC9BC,EAAUF,EAAEG,OAAZD,MAEFA,EAAQ,EAAGA,EAAQ,EACdA,EAAQ,MAAKA,EAAQ,KAE9BL,EAAS,CACPO,KAAM,eACNH,MAAO,CACLI,KAAMJ,EACNC,WAKN,OACE,kBAAC,WAAD,KACE,kBAACZ,EAAD,KACE,2BAAOc,KAAK,SAASE,IAAI,IAAIC,IAAI,MAAMC,SAAU,SAAAR,GAAC,OAAID,EAAkBC,EAAG,QAAQE,MAAOR,EAAKe,UAAU,aAAaC,YAAY,MAClI,2BAAON,KAAK,SAASE,IAAI,IAAIC,IAAI,MAAMC,SAAU,SAAAR,GAAC,OAAID,EAAkBC,EAAG,UAAUE,MAAOP,EAAOc,UAAU,eAAeC,YAAY,MACxI,2BAAON,KAAK,SAASE,IAAI,IAAIC,IAAI,MAAMC,SAAU,SAAAR,GAAC,OAAID,EAAkBC,EAAG,SAASE,MAAON,EAAMa,UAAU,cAAcC,YAAY,QCwC7I,SAASC,EAAUjB,EAAKC,EAAOC,GAO7B,MAAO,CAJQgB,WAAWlB,EAFV,KAGCkB,WAAWjB,EAHZ,KAIAiB,WAAWhB,EAJX,M,shBCtEX,IAAMiB,EAAiBzB,IAAO0B,GAAV,KCsCZC,MAlCf,WACE,IAAMC,EAASxB,aAAY,SAAAC,GAAK,OAAIA,KAE9BwB,EAAgBC,mBAAQ,kBFTzB,YAA2C,IAAD,mBAAnBxB,EAAmB,KAAdC,EAAc,KAAPC,EAAO,KACzCuB,EAAMzB,EAAMC,EAAQC,EAC1B,OAAIuB,GAAO,EAAU,CAAC,EAAG,EAAG,GAMrB,CAJQzB,EAAMyB,EACJxB,EAAQwB,EACTvB,EAAOuB,GAEYC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAAQ,IAAM,KECxBC,CAAaP,KAAS,CAACA,IACrDQ,EAAUN,mBAAQ,kBFEnB,YAAuC,IAAD,qBACPP,EADO,mCACpCc,EADoC,KAC5BC,EAD4B,KAClBC,EADkB,KAGrCC,EAAQ,EAAIC,KAAKtB,IAAIkB,EAAQC,EAAUC,GAK7C,MAAO,CAJMf,YAAY,EAAIa,EAASG,IAAU,EAAIA,KAIpC,EAHAhB,YAAY,EAAIc,EAAWE,IAAU,EAAIA,KAG3B,EAFfhB,YAAY,EAAIe,EAAUC,IAAU,EAAIA,KAEZ,EAAGA,GAAS,GAAGR,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAAQ,MEV/CQ,CAASd,KAAS,CAACA,IAC3Ce,EAASb,mBAAQ,kBFclB,YAAsC,IAAD,qBACNP,EADM,mCACnCc,EADmC,KAC3BC,EAD2B,KACjBC,EADiB,KAE1CK,QAAQC,IAAI,kBAAmBR,EAAQC,EAAUC,GAEjD,IAAMrB,EAAMuB,KAAKvB,IAAImB,EAAQC,EAAUC,GACjCpB,EAAMsB,KAAKtB,IAAIkB,EAAQC,EAAUC,GAEvC,GAAIrB,IAAQC,EAAK,MAAO,CAAC,EAAG,EAAGD,GAE/B,IAII4B,EAJmBR,EAAWC,EAK9BQ,EAAQ,EAgBZ,OAdI5B,IAAQkB,EACNC,EAAWC,IAASQ,EAAQ,KACvB5B,IAAQmB,GACjBQ,EATmBP,EAAUF,EAU7BU,EAAQ,KACC5B,IAAQoB,IACjBO,EAXoBT,EAASC,EAY7BS,EAAQ,KAOH,CAJA,UAAMN,KAAKO,KAAWF,GAAS3B,EAAMD,GAArB,GAA6B6B,GAA7C,QACA,UAAME,UAAU9B,EAAMD,GAAOC,EAAM,KAAnC,KACA,UAAM8B,SAAe,IAAN9B,GAAf,MAEUa,KAAI,SAAAC,GAAC,OAAIA,GAAK,KE5CFiB,CAAQtB,KAAS,CAACA,IACzCuB,EAAYrB,mBAAQ,kBAAoBF,EFgDnCwB,QAAO,SAACC,EAAOpB,GAAR,OAAcoB,EAASpB,IAAG,GAAK,IEhDM,CAACL,IAExD,OACE,kBAAC,WAAD,KACE,6BACA,kBAACH,EAAD,KACE,4BACE,wBAAIJ,UAAU,eAAd,kBACA,gCAASQ,EAAcyB,KAAK,SAE9B,4BACE,wBAAIjC,UAAU,eAAd,iBACA,gCAASe,EAAQkB,KAAK,SAExB,4BACE,wBAAIjC,UAAU,eAAd,gBACA,gCAASsB,EAAOW,KAAK,SAEvB,4BACE,wBAAIjC,UAAU,eAAd,4BACA,gCAASoB,KAAKO,KAAKG,MAGvB,wBAAII,MAAO,CAAEC,aAAc,U,eC/BjC,IAEeC,EAFDC,aCJC,WAA4C,IAA5BrD,EAA2B,uDAAnB,CAAC,EAAG,EAAG,GAAIsD,EAAQ,uCACxD,OAAQA,EAAO3C,MACb,IAAK,eACH,IAAIY,EAAM,YAAOvB,GAETQ,EAAU8C,EAAV9C,MAKR,MAJmB,QAAfA,EAAMI,KAAgBW,EAAO,GAAKqB,SAASpC,EAAMC,OAC7B,UAAfD,EAAMI,KAAkBW,EAAO,GAAKqB,SAASpC,EAAMC,OACvDc,EAAO,GAAKqB,SAASpC,EAAMC,OAEzB,YAAIc,GAEb,QACE,OAAOvB,M,y6BCXEuD,kBAAf,KC6BeC,MApBf,WACE,OACE,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,KACE,wBAAIpC,UAAU,eAAd,2BAEE,2BAAOkC,MAAO,CAAEO,WAAY,QAA5B,wBAEF,kBAAC3D,EAAD,MACA,kBAAC,EAAD,MACA,wBAAIkB,UAAU,eAAd,gCAEE,qCAAU,uBAAG0C,KAAK,kCAAR,WAAV,KAAgE,uBAAGA,KAAK,kCAAR,sBAGpE,kBAAC,EAAD,QCtBNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5ef2dec6.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 1000px;\n  margin: 80px auto;\n  background: #FFF;\n  border-radius: 5px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n  padding: 2%;\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const RGBForm = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin: 3% 0;\n\n  input {\n    outline: none;\n    border-radius: 4px;\n    padding: 10px 40px;\n    font-size: 18px;\n  }\n`;","import React, { Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { RGBForm } from './style';\n\nexport default function RGBInput() {\n\n  const [ red, green, blue ] = useSelector(state => state);\n\n  const dispatch = useDispatch();\n\n  function handleChangeColor(e, color) {    \n    let { value } = e.target;\n\n    if (value < 0) value = 0;\n    else if (value > 255) value = 255;\n\n    dispatch({\n      type: 'UPDATE_COLOR',\n      color: {\n        name: color,\n        value\n      }\n    });\n  }\n\n  return (\n    <Fragment>\n      <RGBForm>\n        <input type=\"number\" min=\"0\" max=\"255\" onChange={e => handleChangeColor(e, 'red')} value={red} className='border-red' placeholder=\"R\" />\n        <input type=\"number\" min=\"0\" max=\"255\" onChange={e => handleChangeColor(e, 'green')} value={green} className='border-green' placeholder=\"G\" />\n        <input type=\"number\" min=\"0\" max=\"255\" onChange={e => handleChangeColor(e, 'blue')} value={blue} className='border-blue' placeholder=\"B\" />\n      </RGBForm>\n    </Fragment>\n  );\n};\n","export function normalizeRGB([red, green, blue]) {\n  const sum = red + green + blue;\n  if (sum <= 0) return [0, 0, 0];\n\n  const newRed = red / sum;\n  const newGreen = green / sum;\n  const newBlue = blue / sum;\n\n  return [newRed, newGreen, newBlue].map(v => v.toFixed(2) || 0);\n};\n\n\nexport function rgb2cmyk([red, green, blue]) {\n  const [newRed, newGreen, newBlue] = getNewRGB(red, green, blue);\n\n  const black = 1 - Math.max(newRed, newGreen, newBlue);\n  const cyan = parseFloat((1 - newRed - black) / (1 - black));\n  const magenta = parseFloat((1 - newGreen - black) / (1 - black));\n  const yellow = parseFloat((1 - newBlue - black) / (1 - black));\n\n  return [cyan || 0, magenta || 0, yellow || 0, black || 0].map(v => v.toFixed(2));\n}\n\n\n// See: http://www.javascripter.net/faq/rgb2hsv.htm\nexport function rgb2hsv([red, green, blue]) {\n  const [newRed, newGreen, newBlue] = getNewRGB(red, green, blue);\n  console.log('Novos valores: ', newRed, newGreen, newBlue);\n\n  const min = Math.min(newRed, newGreen, newBlue);\n  const max = Math.max(newRed, newGreen, newBlue);\n\n  if (min === max) return [0, 0, min];\n\n  const greenMinusBlue = newGreen - newBlue;\n  const blueMinusRed = newBlue - newRed;\n  const redMinusGreen = newRed - newGreen;\n\n  let toUse = greenMinusBlue;\n  let toAdd = 0;\n\n  if (max === newRed) {\n    if (newGreen < newBlue) toAdd = 360;\n  } else if (max === newGreen) {\n    toUse = blueMinusRed;\n    toAdd = 120;\n  } else if (max === newBlue) {\n    toUse = redMinusGreen;\n    toAdd = 240;\n  }\n\n  const H = `${Math.ceil(60 * (toUse / (max - min)) + toAdd)}Â°`;\n  const S = `${parseInt((max - min) / max * 100)}%`;\n  const V = `${parseInt(max * 100)}%`;\n\n  return [H, S, V].map(v => v || 0);\n}\n\n\nexport function rgb2GrayScale(rgb) {\n  return rgb.reduce((total, v) => total += v, 0) / 3;\n}\n\n\n/**\n * Return the RGB values between 0.0 and 1.0\n * \n * @param int red \n * @param int green \n * @param int blue \n */\nfunction getNewRGB(red, green, blue) {\n  const divider = 255.0;\n\n  const newRed = parseFloat(red / divider);\n  const newGreen = parseFloat(green / divider);\n  const newBlue = parseFloat(blue / divider);\n\n  return [newRed, newGreen, newBlue];\n}","import styled from 'styled-components';\n\nexport const ConversionList = styled.ul`\n  margin: 3% 0 3%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 20px;\n  list-style: none;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border: 1px solid #EEE;\n    border-radius: 4px;\n    padding: 10%;\n\n    h4 {\n      color: #BBB;\n      font-weight: 500;\n      text-decoration: underline;\n    }\n  }\n\n  strong {\n    text-align: center;\n    padding: 10%;\n    color: #777;\n  }\n`;","import React, { Fragment, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { normalizeRGB, rgb2cmyk, rgb2hsv, rgb2GrayScale } from '../../utils/functions';\nimport { ConversionList } from './style';\n\nfunction Conversor() {\n  const colors = useSelector(state => state);\n\n  const rgbNormalized = useMemo(() => normalizeRGB(colors), [colors]);\n  const newCMYK = useMemo(() => rgb2cmyk(colors), [colors]);\n  const newHSV = useMemo(() => rgb2hsv(colors), [colors]);\n  const grayscale = useMemo(() => rgb2GrayScale(colors), [colors]);\n\n  return (\n    <Fragment>\n      <hr/>\n      <ConversionList>\n        <li>\n          <h4 className=\"text-center\">Normalizar RGB</h4>\n          <strong>{rgbNormalized.join(' | ')}</strong>\n        </li>\n        <li>\n          <h4 className=\"text-center\">RGB para CMYK</h4>\n          <strong>{newCMYK.join(' | ')}</strong>\n        </li>\n        <li>\n          <h4 className=\"text-center\">RGB para HSV</h4>\n          <strong>{newHSV.join(' | ')}</strong>\n        </li>\n        <li>\n          <h4 className=\"text-center\">RGB para Escala de Cinza</h4>\n          <strong>{Math.ceil(grayscale)}</strong>\n        </li>\n      </ConversionList>\n      <hr style={{ marginBottom: '3%' }} />\n    </Fragment>\n  );\n};\n\nexport default Conversor;","import { createStore } from 'redux';\n\nimport reducer from './modules/colors/reducer';\n\nconst store = createStore(reducer);\n\nexport default store;","export default function colors(state = [0, 0, 0], action) {\n  switch (action.type) {\n    case 'UPDATE_COLOR':\n      let colors = [...state];\n      \n      const { color } = action;\n      if (color.name === 'red') colors[0] = parseInt(color.value);\n      else if (color.name === 'green') colors[1] = parseInt(color.value);\n      else colors[2] = parseInt(color.value);\n\n      return [...colors];\n  \n    default:\n      return state;\n  }\n}","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: none;\n    box-sizing: border-box;\n  }\n\n  html {\n    min-height: 100%;\n  }\n\n  body, #root {\n    background: #606c88;  /* fallback for old browsers */\n    background: -webkit-linear-gradient(to right, #3f4c6b, #606c88);  /* Chrome 10-25, Safari 5.1-6 */\n    background: linear-gradient(to right, #3f4c6b, #606c88); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n    \n    color: #999;\n    font-family: 'Montserrat', sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  /* ---=== CUSTOM === --- */\n  .text-center {\n    text-align: center;\n  }\n\n  .border-red {\n    border: 1px solid red;\n  }\n\n  .border-green {\n    border: 1px solid green;\n  }\n\n  .border-blue {\n    border: 1px solid blue;\n  }\n\n  a {\n    text-decoration: none;\n    color: #555;\n  }\n`;","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport Container from './components/Container';\nimport RGBInput from './components/RGBInput';\nimport Conversor from './components/Conversor';\n\nimport store from './store';\n\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Container>\n        <h1 className=\"text-center\">\n          Processamento de Imagens\n          <small style={{ fontWeight: '500' }}> | ConversÃ£o RGB</small>\n        </h1>\n        <RGBInput />\n        <Conversor />\n        <h4 className=\"text-center\">\n          JOÃO VITOR VERONESE VIEIRA\n          <small> | <a href=\"https://github.com/joao-vieira\">PERFIL </a>ou<a href=\"https://github.com/joao-vieira\"> REPOSITÃRIO</a></small>\n        </h4>\n      </Container>\n      <GlobalStyle />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}